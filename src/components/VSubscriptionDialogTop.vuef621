




































































import {
  VSubscriptionFrag,
  SubType,
  SubscriptionStatus
} from '@/graphql/types';
import { Component, Mixins, Prop } from 'vue-property-decorator';
import MeMixin from '@/mixins/MeMixin';
import { namespace } from 'vuex-class';
import VDliveAvatar from '@/components/VDliveAvatar.vue';
import VDliveName from '@/components/VDliveName.vue';
import DMenu from '@/components/DMenu.vue';
import DMenuItem from '@/components/DMenuItem.vue';
const uiModule = namespace('ui');
@Component({
  components: {
    VDliveAvatar,
    VDliveName,
    DMenu,
    DMenuItem
  }
})
export default class VSubscriptionDialogTop extends Mixins(MeMixin) {
  @Prop({
    required: true
  })
  public subscribee!: VSubscriptionFrag.Fragment;

  @Prop({
    required: false,
    default: false,
    type: Boolean
  })
  public isResub!: boolean;

  public subSettingShow: boolean = false;
  @uiModule.Getter('isMobile')
  private isMobile!: boolean;

  get isRecurring() {
    return (
      this.subscribee.mySubscription &&
      this.subscribee.mySubscription.subType === SubType.Recurring
    );
  }

  get bgSrc() {
    if (
      this.subscribee &&
      this.subscribee.subSetting &&
      this.subscribee.subSetting.backgroundImage
    ) {
      return this.subscribee.subSetting.backgroundImage;
    } else {
      return require('@/assets/icon/sub-popup-top.svg');
    }
  }

  get isActiveSub() {
    return (
      this.subscribee.mySubscription &&
      this.subscribee.mySubscription.status === SubscriptionStatus.Active
    );
  }

  public goCancelClicked() {
    this.$emit('onGoCancel');
  }
  public closeSubDialog() {
    this.$emit('closeSubDialog');
  }
}
