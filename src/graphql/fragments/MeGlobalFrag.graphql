
    var doc = {"kind":"Document","definitions":[{"kind":"FragmentDefinition","name":{"kind":"Name","value":"MeGlobalFrag"},"typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"User"}},"directives":[],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"},"arguments":[],"directives":[]},{"kind":"Field","name":{"kind":"Name","value":"username"},"arguments":[],"directives":[]},{"kind":"FragmentSpread","name":{"kind":"Name","value":"VDliveAvatarFrag"},"directives":[]},{"kind":"Field","name":{"kind":"Name","value":"displayname"},"arguments":[],"directives":[]},{"kind":"Field","name":{"kind":"Name","value":"partnerStatus"},"arguments":[],"directives":[]},{"kind":"Field","name":{"kind":"Name","value":"role"},"arguments":[],"directives":[]},{"kind":"Field","name":{"kind":"Name","value":"effect"},"arguments":[],"directives":[]},{"kind":"Field","name":{"kind":"Name","value":"chatBannedEmote"},"arguments":[],"directives":[]},{"kind":"Field","name":{"kind":"Name","value":"chatBannedEmoji"},"arguments":[],"directives":[]},{"kind":"FragmentSpread","name":{"kind":"Name","value":"EmojiFrag"},"directives":[]},{"kind":"Field","name":{"kind":"Name","value":"emote"},"arguments":[],"directives":[],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"FragmentSpread","name":{"kind":"Name","value":"EmoteVipFrag"},"directives":[]},{"kind":"FragmentSpread","name":{"kind":"Name","value":"EmoteChannelFrag"},"directives":[]}]}},{"kind":"FragmentSpread","name":{"kind":"Name","value":"EmojiGroupFrag"},"directives":[]},{"kind":"Field","name":{"kind":"Name","value":"private"},"arguments":[],"directives":[],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"accessToken"},"arguments":[],"directives":[]},{"kind":"Field","name":{"kind":"Name","value":"insecure"},"arguments":[],"directives":[]},{"kind":"Field","name":{"kind":"Name","value":"email"},"arguments":[],"directives":[]},{"kind":"Field","name":{"kind":"Name","value":"emailVerified"},"arguments":[],"directives":[]},{"kind":"Field","name":{"kind":"Name","value":"phone"},"arguments":[],"directives":[]},{"kind":"Field","name":{"kind":"Name","value":"emoteNamePrefix"},"arguments":[],"directives":[],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"namePrefix"},"arguments":[],"directives":[]}]}},{"kind":"Field","name":{"kind":"Name","value":"nextDisplayNameChangeTime"},"arguments":[],"directives":[]},{"kind":"Field","name":{"kind":"Name","value":"language"},"arguments":[],"directives":[]},{"kind":"Field","name":{"kind":"Name","value":"showSubSettingTab"},"arguments":[],"directives":[]},{"kind":"Field","name":{"kind":"Name","value":"registrationType"},"arguments":[],"directives":[]},{"kind":"Field","name":{"kind":"Name","value":"twoFactorEnabled"},"arguments":[],"directives":[]},{"kind":"Field","name":{"kind":"Name","value":"bttAddress"},"arguments":[],"directives":[],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"senderAddress"},"arguments":[],"directives":[]},{"kind":"Field","name":{"kind":"Name","value":"receiverAddress"},"arguments":[],"directives":[]}]}},{"kind":"Field","name":{"kind":"Name","value":"partnerBTTAddress"},"arguments":[],"directives":[]},{"kind":"Field","name":{"kind":"Name","value":"gotNewBadge"},"arguments":[],"directives":[]},{"kind":"Field","name":{"kind":"Name","value":"badges"},"arguments":[],"directives":[],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"badge"},"arguments":[],"directives":[]},{"kind":"Field","name":{"kind":"Name","value":"newBadge"},"arguments":[],"directives":[]},{"kind":"Field","name":{"kind":"Name","value":"wore"},"arguments":[],"directives":[]}]}}]}},{"kind":"Field","name":{"kind":"Name","value":"subCashbacked"},"arguments":[],"directives":[]},{"kind":"Field","name":{"kind":"Name","value":"hadLemonBack"},"arguments":[],"directives":[]},{"kind":"FragmentSpread","name":{"kind":"Name","value":"SettingsSubscribeFrag"},"directives":[]}]}}],"loc":{"start":0,"end":896}};
    doc.loc.source = {"body":"#import './VDliveAvatar.graphql'\n#import './SettingsSubscribe.graphql'\n#import './EmojiFrag.graphql'\n#import './EmoteVip.graphql'\n#import './EmoteChannel.graphql'\n#import './EmojiGroupFrag.graphql'\nfragment MeGlobalFrag on User {\n  id\n  username\n  ...VDliveAvatarFrag\n  displayname\n  partnerStatus\n  role\n  effect\n  chatBannedEmote\n  chatBannedEmoji\n  ...EmojiFrag\n  emote{\n    ...EmoteVipFrag\n    ...EmoteChannelFrag\n  }\n  ...EmojiGroupFrag\n  private {\n    accessToken\n    insecure\n    email\n    emailVerified\n    phone\n    emoteNamePrefix{\n      namePrefix\n    }\n    nextDisplayNameChangeTime\n    language\n    showSubSettingTab\n    registrationType\n    twoFactorEnabled\n    bttAddress {\n      senderAddress\n      receiverAddress\n    }\n    partnerBTTAddress\n    gotNewBadge\n    badges {\n      badge\n      newBadge\n      wore\n    }\n  }\n  subCashbacked\n  hadLemonBack\n  ...SettingsSubscribeFrag\n}\n","name":"GraphQL request","locationOffset":{"line":1,"column":1}};
  

    var names = {};
    function unique(defs) {
      return defs.filter(
        function(def) {
          if (def.kind !== 'FragmentDefinition') return true;
          var name = def.name.value
          if (names[name]) {
            return false;
          } else {
            names[name] = true;
            return true;
          }
        }
      )
    }
  doc.definitions = doc.definitions.concat(unique(require('./VDliveAvatar.graphql').definitions));
doc.definitions = doc.definitions.concat(unique(require('./SettingsSubscribe.graphql').definitions));
doc.definitions = doc.definitions.concat(unique(require('./EmojiFrag.graphql').definitions));
doc.definitions = doc.definitions.concat(unique(require('./EmoteVip.graphql').definitions));
doc.definitions = doc.definitions.concat(unique(require('./EmoteChannel.graphql').definitions));
doc.definitions = doc.definitions.concat(unique(require('./EmojiGroupFrag.graphql').definitions));


      module.exports = doc;
    
